#summary Спецификация by Дмитрий Исупов


=  Формат, в который запаковываются классы при передаче в строке=

Все классы, наследуемые от !DbTableRecord, имеют схожий вид - это просто набор параметров с методами для их получения/задания. Формат упаковывания этих классов в строку крайне прост. Каждый из параметров имеет свое название и имеет один из двух типов: строковый или целочисленный (int или byte, но при передаче в строке это не имеет значения). Строка имеет вид: "параметр1=значение1 параметр2=значение2 ... параметрN=значениеN" - т.е. пары параметр=значение, разделенные одним пробелом. При этом значение может быть заключено в одинарные кавычки (на случай, если в нем содержатся пробелы). Сами одинарные кавычки в значении заменяются тегом {{{"<apostrophe>"}}}. Имена параметров case-sensitive и строятся по следующим правилам: 
 * первое слово в названии параметра пишется маленькими буквами с маленькой буквы 
 * второе и последующие слова пишутся маленькими буквами, но с большой буквы 
 * "ID" всегда пишется большими буквами 

Чтобы не возникало никаких сомнений, выписываю используемые имена во всех классах: 

  _!ExamType:_
ID 
name 

  _Group:_ 
ID 
name 
course 

  _Lecture:_ 
ID 
name 
examTypeID 
comment 

  _Room:_ 
ID 
name 

  _Teacher:_ 
ID 
name 
degree 

  _Schedule:_ 
ID 
groupID 
day 
startTime 
length 
lectureID 
roomID 
teacherID 
comment 

  _!ScheduleChange:_ 
ID 
scheduleID 
week 
groupID 
day 
startTime 
length 
lectureID 
roomID 
teacherID 
comment 

*Пример передаваемой строки для класса Group:* 
"ID=1 name='793б' course='4 курс, кафедра <apostrophe>ABBYY<apostrophe>'" 

При передаче сразу нескольких объектов (например, результат функции getAll() ) XML-сервис возвращает массив String[], каждый элемент которого - запакованный в строку класс.

[http://code.google.com/p/vkurse/wiki/Java На главную]