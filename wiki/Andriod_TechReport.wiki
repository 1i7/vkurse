#summary Технический отчёт.

= Отчет на общее техническое задание =
== Android ==

*Android  SDK* - это набор инструментов для написания мобильных приложений под платформу Android с открытым исходным кодом, созданный Google'ом и Open Handset Alliance.

*Отличительные черты платформы Android:*
 * полностью открытая, основана на Linux.
 * автоматическое управление жизненным циклом приложения
 * хорошая графика и звук
 * хорошая переносимость приложений на другие моб. Устройства.
*Архитектура Android:*
|| 1. Applications and Widgets || Станд. приложения типа e-mail клиента, и компоненты приложений — button, textbox и т.д. ||
|| 2. Application Framework || Кирпичики, которые будут использоваться приложением.  Работа с ресурсами, «окнами» приложения (Activity manager), положением телефона, сообщениями. ||
|| 3. Native Libraries. Dalvik Virtual Machine. ||Библиотеки устанавливаемые производителем устройства. Используются приложениями высоко уровня. Включают управление базами данных, графикой, экраном и т.п.  DVM — вирт. машина java специально для Android. ||
|| 4. Ядро linux || Используется для управления памятью, процессами, сетями и другими сервисами (Bluetooth, WiFi). Низкий уровень. ||

В Android'е всегда имеется только одно приложение, которые видит пользователь (* foreground application *). Оно занимает почти весь экран( кроме строки состояния ). Если пользователь запустил другое приложение или перешел в другой окно (* activity *) старого, то старое приложение или окно записываются в стек (* application stack *), который управляется *Activity manager'ом*. В любой момент пользователь может нажать кнопку «назад» и перейти в предыдущее приложение или окно.

Приложение — это несколько окон + процесс (* Linux process *), который должен их хранить.  Важно заметить, что процесс - это одноразовый контейнер для окон.  Жизненный цикл процесса не связан с жизненным циклом окна (* life cycle *) .

*Жизненный цикл окна ( основные моменты ):*

!OnCreate -  метод запускается когда окна создается в первый раз. Здесь разумно делать инициализацию переменных и создание интерфейса

!OnStart - запускается когда окна показывается пользователю.

!OnResume — запускается когда окно готово взаимодействовать с пользователем.

!OnPause — запускается когда  данное окно закрывается, потому что открывается другое. Здесь следует сохранить значения переменных.

!OnStop - запускается когда окно больше не видно пользователю ( просто закрыл ). Если в телефоне мало памяти, то  система может просто  удалить процесс, т.е. этот метод может не вызываться. 

!OnRestart — запускается когда окно показывается заново из состояния STOPPED

!OnDestroy — запускается перед  уничтожением окна.
Интент (* Intent *) - это механизм описание специальных действий, таких как «снять фото», «отправить e-mail».  Ресурсы (* Resources *) - это строки, картинки или любой другой файл ( только не java код ).

http://vkurse.googlecode.com/svn/doc/Android/ScreenLifeCycle.jpg

== Тестовое приложение ==

Тестовое приложение состоит из двух окон. В первом окне два spinner'а ( раскрывающийся список ) для выбора факультета и группы и еще кнопка «показать результаты». При нажатий на кнопку появляется другое окно, где написаны номер группы и факультет.

В методе !OnCreate создается интерфейс приложения. В методе !OnClick обрабатывается событие нажатия кнопки.

Для хранения названий факультетов и групп использовался массив строк, который хранился как ресурс. При нажатий на кнопку запоминались индексы выбранных элементов  и передовались второму  окну с помощью putExtra ( key, value ). Второе окно вызывало метод   getIntExtra( key, default value ) для получения индексов. Далее,  зная индексы в массивах, узнали группу и факультет, и вывели это на экран ( !TextView ).

[http://code.google.com/p/vkurse/wiki/Android На главную]